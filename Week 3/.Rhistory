setwd("~/Pravin/MITAnalyticsEdge/MITAnalyticsEdge/Week 3")
quality = read.csv("quality.csv")
str(quality)
table(quality$PoorCare)
install.packages("caTools")
library(caTools)
set.seed(88)
split = sample.split(quality$PoorCare,SplitRatio = 0.75)
split
qualityTrain = subset(quality, split == TRUE)
qualityTest = subset(quality, split == FALSE)
nrow(qualityTrain)
nrow(qualityTest)
str(quality)
QualityLog = glm(PoorCare ~ OfficeVisits + Narcotics, data = qualityTrain, family = binomial)
summart(QualityLog)
summary(QualityLog)
QualityLog2 = glm(PoorCare ~ OfficeVisits + Narcotics + Pain, data = qualityTrain, family = binomial)
summary(QualityLog2)
QualityLog2 = glm(PoorCare ~ OfficeVisits + Narcotics + ERVisits, data = qualityTrain, family = binomial)
summary(QualityLog2)
predictTrain = predict(QualityLog, type = "response")
summary(predictTrain)
tapply(predictTrain, qualityTrain$PoorCare, mean)
predictTrain
tapply(predictTrain, qualityTrain$PoorCare, mean)
QualityLog3 = glm(PoorCare ~ StartedOnCombination + ProviderCount, data = qualityTrain, family = binomial)
summary(QualityLog3)
summary(predictTrain)
predictTrain
table(qualityTrain$PoorCare, predictTrain)
table(qualityTrain$PoorCare, predictTrain > 0.5)
table(qualityTrain$PoorCare, predictTrain > 0.9)
table(qualityTrain$PoorCare, predictTrain > 0.2)
summary(QualityLog) # Lower the value of
install.packages("ROCR")
library(ROCR)
ROCRpred = predict(predictTrain, qualityTrain $PoorCare)
ROCRpred = prediction(predictTrain, qualityTrain $PoorCare)
ROCperf = performance(ROCRpred, "tpr", "fpr")
plot(ROCRperf)
plot(ROCperf)
plot(ROCperf, colorize = TRUE)
plot(ROCperf, colorize = TRUE, print.cutoffs.at=seq(0,1,0.1), text.adj = c(-0.2,1.7))
predictTest = predict(QualityLog, type="response", newdata=qualityTest)
ROCRpredTest = prediction(predictTest, qualityTest$PoorCare)
auc = as.numeric(performance(ROCRpredTest, "auc")@y.values)
auc

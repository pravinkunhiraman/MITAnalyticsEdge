data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
statedata
head(statedata)
str(statedata)
summary(statedata)
plot(statedata$x,statedata$y)
plot(statedata$y, statedata$x)
plot(statedata$x, statedata$y)
tapply(statedata$HS.Grad,statedata$Area,mean)
tapply(statedata$HS.Grad,statedata$state.region,mean)
?boxplot
boxplot(statedata$Murder,statedata$state.region)
boxplot(statedata$state.region,statedata$Murder)
tapply(statedata$Murder,statedata$state.region,mean)
boxplot(statedata$Murder ~ statedata$state.region)
Noreast = subset(statedata, statedata$state.region == "Northeast")
summary(statedata$Murder)
Noreast
summary(statedata$Murder)
LEModel = lm(Life.Exp ~ Population + Income + Illiteracy+ Murder+ HS.Grad+ Frost+ Area, data = statedata)
summary(LEModel)
plot(statedata$Income, statedata$Life.Exp)
LEModel = lm(Life.Exp ~ Population + Income + Illiteracy+ Murder+ HS.Grad+ Frost, data = statedata)
summary(LEModel)
LEModel = lm(Life.Exp ~ Population + Income + Murder+ HS.Grad+ Frost, data = statedata)
summary(LEModel)
LEModel = lm(Life.Exp ~ Population + Murder+ HS.Grad+ Frost, data = statedata)
summary(LEModel)
LEpredict = predict(LEModel,statedata)
LEpredict
sort(LEpredict)
which.min(statedata$Life.Exp)
statedata[40]
statedata$state.name[40]
sort(LEpredict)
which.max(statedata$Life.Exp)
statedata$state.name[11]
ResidualDiff = LEpredict -
?abs
?abs
ResidualDiff = abs(LEpredict - statedata$Life.Exp)
ResidualDiff
sort(ResidualDiff)
Elantra = read.csv("elantra.csv")
setwd("~/Pravin/MITAnalyticsEdge/MITAnalyticsEdge/Week 2")
Elantra = read.csv("elantra.csv")
str(Elantra)
head(Elantra)
tail(Elantra)
ElantraTrain = subset(Elantra, Elantra$Year<=2012)
ElantraTest = subset(Elantra,Elantra$Year>2012)
nrow(Elantra)
nrow(ElantraTrain)
nrow(ElantraTest)
str(ElantraTest)
str(ElantraTrain)
SalesModel = lm(ElantraSales ~ Unemployment + CPI_all + CPI_energy + Queries , data = ElantraTrain)
summary(SalesModel)
SalesModel2 = lm(ElantraSales ~ Month + Unemployment + CPI_all + CPI_energy + Queries , data = ElantraTrain)
summary(SalesModel2)
110.6*2
221.2*2
ElantraTrain$MonthFactor = as.factor(ElantraTrain$Month)
ElantraTrain
SalesModel3 = lm(ElantraSales ~ MonthFactor + Unemployment + CPI_all + CPI_energy + Queries , data = ElantraTrain)
summary(SalesModel3)
summary(SalesModel2)
summary(SalesModel)
summary(SalesModel3)
cor(ElantraTrain)
cor(ElantraTrain$CPI_energy)
?cor
cor(ElantraTrain$CPI_energy,ElantraTrain$Month)
cor(ElantraTrain$CPI_energy,ElantraTrain$Unemployment)
cor(ElantraTrain$CPI_energy,ElantraTrain$Queries)
cor(ElantraTrain$CPI_energy,ElantraTrain$CPI_all)
cor(ElantraTrain$Queries,ElantraTrain$Month)
cor(ElantraTrain$Queries,ElantraTrain$Unemployment)
cor(ElantraTrain$Queries,ElantraTrain$CPI_energy)
cor(ElantraTrain$Queries,ElantraTrain$CPI_all)
SalesModel3 = lm(ElantraSales ~ MonthFactor + Unemployment + CPI_all + CPI_energy + Queries , data = ElantraTrain)
summary(SalesModel3)
SalesModel4 = lm(ElantraSales ~ MonthFactor + Unemployment + CPI_all + CPI_energy , data = ElantraTrain)
summary(SalesModel4)
ElantraPredict = predict(SalesModel4,newdata = ElantraTest)
ElantraTest$MonthFactor = as.factor(ElantraTest$Month)
ElantraPredict = predict(SalesModel4,newdata = ElantraTest)
SSE = sum((ElantraPredict - ElantraTest$ElantraSales)^2)
SSE
mean(ElantraTrain$ElantraSales)
SST = sum((ElantraPredict - mean(ElantraTrain$ElantraSales))^2)
R2 = 1-SSE/SST
R2
SST = sum((mean(ElantraTrain$ElantraSales - ElantraTest$ElantraSales))^2)
SST = sum((mean(ElantraTrain$ElantraSales) - ElantraTest$ElantraSales)^2)
R2 = 1-SSE/SST
R2
SalesError = ElantraPredict - ElantraTest$ElantraSales
SalesError = abs(ElantraPredict - ElantraTest$ElantraSales)
which.max(SalesError)
#which.max(SalesError)
SalesError
ElantraError = ElantraTest
ElantraError$SalesError = abs(ElantraPredict - ElantraTest$ElantraSales)
which.max(ElantraError$SalesError)
ElantraError
LEModel = lm(Life.Exp ~ Population + Murder+ HS.Grad+ Frost, data = statedata)
summary(LEModel)

install.packages("caret", dependencies=TRUE, repos='http://cran.rstudio.com/')
setRepositories()
install.packages("caret", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("caret", dependencies=TRUE, repos='http://cran.us.r-project.org/')
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret")
library(caret)
install.packages("assertthat")
library(caret)
install.packages("caret",dep=TRUE)
library(caret)
install.packages("generics",dep=TRUE)
library(caret)
install.packages("gower",dep=TRUE)
library(caret)
install.packages("caTools",dep=TRUE)
install.packages("rpart",dep=TRUE)
install.packages("rpart", dep = TRUE)
install.packages("rpart.plot",dep=TRUE)
install.packages("randomForest",dep=TRUE)
setwd("~/Pravin/MITAnalyticsEdge/MITAnalyticsEdge/Week 6")
stocks = read.csv("StocksCluster.csv")
str(stocks)
summary(stocks)
6324/nrow(stocks)
table(stocks$PositiveDec)
library(caTools)
set.seed(144)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
stocksTrain = subset(stocks, spl == TRUE)
stocksTest = subset(stocks, spl == FALSE)
StocksModel = glm(PositiveDec ~ ., data = stocksTrain, family = binomial)
PredTrain = predict(StocksModel, type = "response")
table(stocksTrain$PositiveDec, PredTrain > 0.5)
(990+3640)/nrow(stocksTrain)
PredTest = predict(StocksModel, newdata = stocksTest, type = "response")
table(stocksTest$PositiveDec, PredTest > 0.5)
(417+1553)/nrow(stocksTest)
limitedTrain = stocksTrain
limitedTrain$PositiveDec = NULL
limitedTest$PositiveDec = NULL
limitedTest = stocksTest
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
summary(normTrain)
summary(normTest)
set.seed(144)
KMC = kmeans(normTrain, centers = 3)
KMC$cluster
set.seed(144)
km = kmeans(normTrain, centers = 3)
km$cluster
table(km$cluster)
install.packages("flexclust")
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
rm(list=ls())
stocks = read.csv("StocksCluster.csv")
library(caTools)
set.seed(144)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
stocksTrain = subset(stocks, spl == TRUE)
stocksTest = subset(stocks, spl == FALSE)
StocksModel = glm(PositiveDec ~ ., data = stocksTrain, family = binomial)
PredTrain = predict(StocksModel, type = "response")
table(stocksTrain$PositiveDec, PredTrain > 0.5)
(990+3640)/nrow(stocksTrain)
PredTest = predict(StocksModel, newdata = stocksTest, type = "response")
table(stocksTest$PositiveDec, PredTest > 0.5)
(417+1553)/nrow(stocksTest)
limitedTrain = stocksTrain
limitedTrain$PositiveDec = NULL
limitedTest = stocksTest
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
set.seed(144)
km = kmeans(normTrain, centers = 3)
km$cluster
table(km$cluster)
install.packages("flexclust")
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
clusterTest
table(clusterTest)
stocksTrain1 = subset(stocksTrain, clusterTest == 1)
str(stocksTrain1)
stocksTrain2 = subset(stocksTrain, clusterTest == 2)
stocksTrain3 = subset(stocksTrain, clusterTest == 3)
summary(stocksTrain1)
summary(stocksTrain2)
summary(stocksTrain3)
stocksTrain1 = subset(stocksTrain, clusterTrain == 1)
stocksTrain2 = subset(stocksTrain, clusterTrain == 2)
stocksTrain3 = subset(stocksTrain, clusterTrain == 3)
summary(stocksTrain1)
summary(stocksTrain2)
summary(stocksTrain3)
StocksModel1 = glm(PositiveDec ~ ., data = stocksTrain1, family = binomial)
StocksModel2 = glm(PositiveDec ~ ., data = stocksTrain2, family = binomial)
StocksModel3 = glm(PositiveDec ~ ., data = stocksTrain3, family = binomial)
summary(StocksModel1)
summary(StocksModel2)
summary(StocksModel3)
stocksTest1 = subset(stocksTest, clusterTest == 1)
stocksTest2 = subset(stocksTest, clusterTest == 2)
stocksTest3 = subset(stocksTest, clusterTest == 3)
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
(30+774)/nrow(stocksTest1)
table(stocksTest2$PositiveDec, PredictTest2 > 0.5)
(388+757)/nrow(stocksTest2)
table(stocksTest3$PositiveDec, PredictTest3 > 0.5)
(49+13)/nrow(stocksTest3)
AllPredictions = c(PredictTest1, PredictTest2, PredictTest3)
AllOutcomes = c(stocksTest1$PositiveDec, stocksTest2$PositiveDec, stocksTest3$PositiveDec)
table(AllOutcomes$PositiveDec, AllPredictions > 0.5)
table(AllOutcomes, AllPredictions > 0.5)
(467+1544)/(467+1544+1110+353)
